<!DOCTYPE html>
<html lang="pt">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>O que é CSS?</title>
</head>
<body>

    <h1>O que é CSS?</h1>
    <h3> CSS significa <b>Cascading Style Sheets</b> (Folhas de Estilo em Cascata).
        <br>Ele é utilizado para definir o estilo dos elementos de uma página HTML, como cores, tamanhos, fontes e layouts.</h3>

    <h2>Tipos de CSS:</h2>
  <p> <h3> Existe 3 maneiras de usar o CSS elas são:
      <br><b>CSS Inline; CSS Interno; CSS Externo</b>.
    <br>E irei te explicar cada uma delas, e suas utilidades 
          
    </h3>

    <h2>CSS Inline:</h2>
<p> <h3>
<p>O estilo é aplicado diretamente dentro das tags HTML.É útil para
<br>pequenas alterações,mas difícil de manter em projetos grandes.
    </h3>

    <h2>CSS Interno:</h2>
  <p> <h3>Os estilos são escritos dentro da tag <b>style</b> no próprio arquivo HTML.
  <br>Funciona bem para páginas menores, mas pode deixar o código desorganizado em projetos maiores.

    </h3>

    <h2>CSS Externo:</h2>
<p> <h3>Os estilos ficam em um arquivo separado (.css) e são vinculados ao HTML.
   <br>Essa é a melhor prática, pois facilita a manutenção e reutilização do código.

    </h3>
      <h2>Versões e evolução do CSS</h2>
      <p><h3> Ao longo dos anos tem sido um fenômeno fascinante A evolução do CSS no meio do desenvolvimento web. Desde seus primeiros dias, 
       <br> quando era usado principalmente para estilizar documentos HTML simples, até se tornar uma linguagem robusta e sofisticada capaz 
        <br> de criar layouts complexos e designs interativos, o CSS percorreu um longo caminho.</h3>
     
        <p><h3>No início, o CSS era limitado em suas capacidades, oferecendo principalmente formatação básica para textos e elementos de layout 
       <br> simples. À medida que a complexidade das páginas web aumentou e a demanda por designs mais ricos cresceu, surgiu a necessidade de uma
        <br> linguagem de estilo mais poderosa.</h3></p>

        <p><h3>Com a chegada do CSS2, vimos melhorias significativas. Introduziu recursos como posicionamento absoluto e relativo, seletores 
           <br> avançados e suporte para folhas de estilo em mídias específicas. No entanto, as limitações persistiam, especialmente em relação à
            <br> criação de layouts complexos e responsivos.</h3></p>
        
            <p><h3>A verdadeira revolução veio com o advento do CSS3. Esse grande passo evolutivo trouxe consigo uma série de módulos que introduziram
               <br>  funcionalidades revolucionárias. Entre eles, destacam-se:</h3></p>
                    
               <p><h4> <b>1-Flexbox:</b> Uma abordagem mais eficiente para criar layouts flexíveis, 
                        permitindo a criação de designs mais responsivos e dinâmicos.</h4></p>
        
                <p><h4><b>2-Grid Layout</b>  Uma ferramenta poderosa para criar layouts bidimensionais, 
                    <br>proporcionando controle preciso sobre as colunas e linhas de um design, transformando 
                   <br> a maneira como os desenvolvedores abordam a estrutura de páginas.</h4></p>    
                
                <p><h4><b>3-Transições e Animações:</b> CSS3 trouxe a capacidade de criar transições suaves e
                    <br> animações diretamente no CSS, antes muitas vezes realizadas por meio de JavaScript.</h4></p>   
                
                <p><h4><b>4-Transformações 2D e 3D:</b> A capacidade de aplicar transformações complexas a elementos HTML, 
                    <br>permitindo experiências mais ricas e interativas.</h4></p>    

                <p><h4><b>5-Media Queries:</b>  Essencial para o desenvolvimento responsivo, as Media Queries permitem que os
                    <br> estilos se adaptem dinamicamente a diferentes tamanhos de tela e dispositivos.</h4></p>    
    
            


</body>
</html>
